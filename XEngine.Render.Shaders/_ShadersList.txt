$VS QuadVS QuadVS.hlsl:main;
$PS LightingPassCS LightingPassCS.hlsl:main;
$PS SceneGeometryAS[wave32] SceneGeometryAS.hlsl:main;

# defines example
# $PS "lighting-pass<1>" "LightingPass.CS.hlsl": main QUALITY="1" UNDERSAMPLE="0";


$AS   SceneGeometryAS[wave32]*US0*AFS0   SceneGeometryAS:main   WAVE_SIZE_LOG2="5" UNDERSAMPLE="0" AGGRESSIVE_FIREFLY_SUPPERTION="0";
$AS   SceneGeometryAS[wave32]*US1*AFS0   SceneGeometryAS:main   WAVE_SIZE_LOG2="5" UNDERSAMPLE="1" AGGRESSIVE_FIREFLY_SUPPERTION="0";
$AS   SceneGeometryAS[wave64]*US0*AFS0   SceneGeometryAS:main   WAVE_SIZE_LOG2="6" UNDERSAMPLE="0" AGGRESSIVE_FIREFLY_SUPPERTION="0";
$AS   SceneGeometryAS[wave64]*US1*AFS0   SceneGeometryAS:main   WAVE_SIZE_LOG2="6" UNDERSAMPLE="1" AGGRESSIVE_FIREFLY_SUPPERTION="0";


# Allowed symbols for shader name 0..9 A..Z a..z ()*+,-./:<=>[\]_
# Allowed symbols for shader source filename 0..9 A..Z a..z _-./


// JSON format (maybe even JSON5)
[
    {
        type : "AS",
        name : "SceneGeometryAS[wave32]*US0*AFS0",
        src : "SceneGeometryAS.hlsl",
        entryPoint : "main",
        rootSig : "DefaultRS",
        defines : {
            WAVE_SIZE_LOG2 : 5,
            UNDERSAMPLE : 0,
        }
    },
    {
        type : "RootSig",
        name : "DefaultRS",
        src : "DefaultRS.json",
    },

    { "name":"SceneGeometryAS[wave32]*US0*AFS0", "type":"AS", "src":"SceneGeometryAS.hlsl", "entryPoint":"main", "defines":{ "WAVE_SIZE_LOG2":"5", "UNDERSAMPLE" : "0" } },
    { "name":"SceneGeometryAS[wave32]*US0*AFS0", "type":"AS", "src":"SceneGeometryAS.hlsl", "entryPoint":"main", "defines":{ "WAVE_SIZE_LOG2":"5", "UNDERSAMPLE" : "0" } }
]


// Root signature
{
    rootFlags : [
        
    ],
    params : [
        {
            name : "globalCB",
            type : "CBV",
            register : 0,
            registerSpace : 0,
            shaderVis : "AS|MS",
        },
    ],
}
